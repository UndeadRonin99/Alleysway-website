@model XBCAD.ViewModels.AvailabilityViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var userId = Model.UserId;  // Assuming Model.UserId is set correctly
}

<div class="container mt-4">
    <h2>Default Availability</h2>
    <div class="availability-section">
        <div class="section-header">
            <h3 class="section-title">General Availability</h3>
        </div>
        <div class="availability-table">
            <div id="availabilityTable">
                @foreach (var day in Model.Days)
                {
                    <div class="day-row mb-4">
                        <div class="day-name"><strong>@day.Day</strong></div>
                        <div class="time-slots" data-day="@day.Day">
                            @if (day.TimeSlots.Any())
                            {
                                foreach (var slot in day.TimeSlots)
                                {
                                    <div class="time-slot-row mb-3">
                                        <div class="time-slot d-flex align-items-center">
                                            <input type="text" class="form-control me-2 timepicker" value="@slot.StartTime" placeholder="Start Time" readonly>
                                            <span class="me-2">until</span>
                                            <input type="text" class="form-control me-2 timepicker" value="@slot.EndTime" placeholder="End Time" readonly>
                                            <button type="button" class="btn btn-danger me-2" onclick="removeTimeSlot(this, '@day.Day', '@slot.StartTime', '@slot.EndTime', '@userId')">🗑️</button>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted">No availability set for this day.</p>
                            }
                        </div>
                        <button type="button" class="btn btn-primary mt-2" onclick="addTimeSlot(this, '@day.Day', '@userId')">+ Add Time</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        var userId = '@userId';  // Correctly scoped variable

        function initializeTimePickers() {
            $(".timepicker").flatpickr({
                enableTime: true,
                noCalendar: true,
                dateFormat: "H:i",
                time_24hr: true
            });
        }

        function loadAvailability() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAvailabilityPartial", "Admin", new { userId = userId, _ = new Random().Next() })',
                success: function (html) {
                    $('#availabilityTable').html(html);
                    initializeTimePickers(); // Ensure this runs after content is replaced
                },
                error: function (xhr, status, error) {
                    console.error("Error loading partial view:", status, error);
                }
            });
        }

        $(document).ready(function () {
            initializeTimePickers();
        });

        function addTimeSlot(button, day, userId) {
            var container = $(button).closest('.day-row').find('.time-slots');
            var startTimeInput = $('<input type="text" class="form-control me-2 timepicker start-time" placeholder="Start Time">');
            var endTimeInput = $('<input type="text" class="form-control me-2 timepicker end-time" placeholder="End Time">');
            var saveButton = $('<button type="button" class="btn btn-success me-2">Save</button>');

            var newSlot = $('<div class="time-slot-row mb-3"></div>')
                .append($('<div class="time-slot d-flex align-items-center"></div>')
                    .append(startTimeInput)
                    .append('<span class="me-2">until</span>')
                    .append(endTimeInput)
                    .append(saveButton)
                    .append('<button type="button" class="btn btn-danger me-2" onclick="removeTimeSlot(this, \'' + day + '\', $(this).closest(\'.time-slot-row\').find(\'.start-time\').val(), $(this).closest(\'.time-slot-row\').find(\'.end-time\').val(), \'' + userId + '\')">🗑️</button>'));
            console.log(userId);

            // Remove "No availability set for this day." message if present
            container.find('.no-availability-message').remove();

            container.append(newSlot); // Append the new slot to the container
            initializeTimePickers();

            saveButton.click(function () {
                var startTime = startTimeInput.val();
                var endTime = endTimeInput.val();

                if (startTime && endTime) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaveTimeSlot", "Admin")',
                        data: { day: day, startTime: startTime, endTime: endTime, userId: userId },
                        success: function (response) {
                            if (response.success) {
                                startTimeInput.prop('disabled', true);
                                endTimeInput.prop('disabled', true);
                                saveButton.remove();
                            } else {
                                alert('Failed to save time slot: ' + response.message);
                            }
                        },
                        error: function () {
                            alert('Error occurred while saving time slot.');
                        }
                    });
                } else {
                    alert('Please enter both start and end times before saving.');
                }
            });
        }

        function removeTimeSlot(button, day, startTime, endTime, userId) {
            console.log("removeTimeSlot triggered", { day, startTime, endTime, userId });
            // If the time slot is being removed before it's saved (no start/end time), just remove from the view
            if (!startTime && !endTime) {
                $(button).closest('.time-slot-row').remove();
                return;
            }

            // Confirm deletion if needed
            if (!confirm("Are you sure you want to delete this time slot?")) {
                return;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveTimeSlot", "Admin")',
                data: { day: day, startTime: startTime, endTime: endTime, userId: userId },
                success: function (response) {
                    if (response.success) {
                        // Remove the time slot from the view
                        $(button).closest('.time-slot-row').remove();
                    } else {
                        alert('Failed to remove time slot: ' + response.message);
                    }
                },
                error: function () {
                    alert('Error occurred while removing time slot.');
                }
            });
        }

    </script>
}
